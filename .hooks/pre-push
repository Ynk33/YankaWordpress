#!/bin/sh
#!/bin/bash

mainBranch="refs/heads/main"
developBranch="refs/heads/develop"

URL_SUFFIX=""

# Ensure the push is on the pre-prod branch
while read local_ref local_sha remote_ref remote_sha
do
  echo Push on $remote_ref
  
  # if the push doesn't occur on the main or develop branch, do nothing
  if [ ! "$remote_ref" = $mainBranch ] && [ ! "$remote_ref" = $developBranch ]
  then
    exit 0
  else
    if [ "$remote_ref" = $developBranch ]
    then
      URL_SUFFIX="-preprod"
    fi
  fi
done

# Push occurs on main or develop branch, so the script may go on

# Checking that everyting is set up for the script to function
DIR=${PWD##*/}
DIR=${DIR:-/}
WP_CONTAINER=${DIR,,}-wordpress-1
DB_CONTAINER=${DIR,,}-db-1
IP_ADDRESS=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $DB_CONTAINER)

# Check if the URL is properly set up
echo Checking if https://${DIR,,}$URL_SUFFIX.yankadevlab.tech exists...
if curl --head --silent --fail https://${DIR,,}$URL_SUFFIX.yankadevlab.tech 2> /dev/null;
 then
  echo "This page exists."
 else
  echo "This page does not exist."
  exit 1
fi

# Check the IP address, if it's empty, the dump can't happen so the script has to stop.
if [ -z "${IP_ADDRESS}" ]
then
  echo
  echo -e "\033[31mThe database couldn't be dumped.\033[0m"
  echo -e "\033[33mPlease, ensure the Docker container is running (\033[0mdocker compose up\033[33m) and push again.\033[0m"
  echo

  exit 126;
fi

# The push is on mainBranch, the Docker container is running, so the pre-push script can execute.
# Let's go!

echo
echo "#####################################################"
echo "####### YANKAWORDPRESS DEPLOY PRE-PUSH SCRIPT #######"
echo "#####################################################"
echo

# DB dump
echo Dumping local database before deploying...

docker exec $WP_CONTAINER bash -c "mysqldump -h $IP_ADDRESS -u wordpress -pwordpress --databases wordpress --no-create-info --no-create-db > dump.sql"
docker exec $WP_CONTAINER bash -c "mysqldump -h $IP_ADDRESS -u wordpress -pwordpress --databases wordpress > dump_full.sql"

echo -e "\033[32mDone.\033[0m"
echo

# Commit the dumps
echo Commit changes...

git add ./dump*.sql
git commit -m "[DEPLOY] Database dumps"
git push --no-verify

echo -e "\033[32mDone.\033[0m"
echo

echo -e "\033[32mYou can safely ignore the 'failed to push' message below. The push DID happen.\033[0m"

# Stop the current push, as we just pushed already ;)
exit 1